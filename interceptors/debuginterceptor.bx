import ortus.boxlang.runtime.context.RequestBoxContext;

class {

	private function getDebug() {
		/*
		println(getBoxContext().getClass().name);
		requestContext = getBoxContext().getRequestContext();
		Removed due to bug
		*/
		requestContext = RequestBoxContext.getCurrent();
		
		return requestContext.computeAttachmentIfAbsent( "debug", ()->structNew() );
	}

	public function onRequestStart(data) {
		debugData = getDebug();
		debugData.requestStarted = getTickCount();
		debugData.requestTemplate = data.args[1];

		debugData.queries = [];
		debugData.http = [];

		debugData.templateStack = [];
	}

	public function onRequestEnd() {
		debugData = getDebug();
		debugData.requestTotal = getTickCount() - debugData.requestStarted;

	}

	public function postQueryExecute(data) {
		debugData = getDebug();

		debugData.queries.append({
			sql:data.sql, 
			executionTime:data.executionTime,
			records:data.result.recordCount
		});

	}

	public function onHTTPResponse(data) {

		debugData = getDebug();
		debugData.http.append({
			executionTime:data.result.executionTime,
			url:data.result.request.url.toString(),
			size:data.result.fileContent.len()
		});
		
	}

	public function preTemplateInvoke(data) {
		debugData = getDebug();
		path = data.templatePath.absolutePath().toString();
		debugData.templateStack.append({
			path:path,
			started:getTickCount()
		});
	}

	public function postTemplateInvoke(data) {
		debugData = getDebug();

		path = data.templatePath.absolutePath().toString();
		/*
		traverse up my stack until path match and set ended to now
		*/
		for(i=debugData.templateStack.len();i>0;i--) {
			if(debugData.templateStack[i].path == path && !debugData.templateStack[i].keyExists('ended')) {
				debugData.templateStack[i].ended = getTickCount();
			}
		}
	}

	/*
	public function postFunctionInvoke(data) {
		writeln(data);
		return;
	}
	*/
}